[%- if unit_test == 'gtest' -%]
#include "gtest/gtest.h"
[%- elif unit_test == 'catch2' -%]
#include "catch.hpp"
[%- endif %]

#include "{{ compile_target }}.hpp"
[%- if unit_test == 'gtest' %]

TEST({{ compile_target }}, version) {
    EXPECT_TRUE(!{{ compile_target }}::ProjectVersion().empty());
}
[%- elif unit_test == 'catch2' %]

TEST_CASE("{{ compile_target }}_version", "[{{ compile_target }}]") {
    REQUIRE(!{{ compile_target }}::ProjectVersion().empty());
}
[%- endif %]
[%- if unit_test == 'gtest' %]

TEST({{ compile_target }}, distribution) {
    const auto is_debug = {{ compile_target }}::distribution::is_debug();
#ifdef _DEBUG
    EXPECT_TRUE(is_debug);
#else
    EXPECT_FALSE(is_debug);
#endif
}
[%- elif unit_test == 'catch2' %]

TEST_CASE("{{ compile_target }}_distribution", "[{{ compile_target }}]") {
    const auto is_debug = {{ compile_target }}::distribution::is_debug();
#ifdef _DEBUG
    REQUIRE(is_debug == true);
#else
    REQUIRE(is_debug == false);
#endif
}
[%- endif %]
